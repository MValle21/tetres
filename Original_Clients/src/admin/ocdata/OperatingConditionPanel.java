/*
 * Copyright (C) 2018 NATSRL @ UMD (University Minnesota Duluth)
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package admin.ocdata;

import java.util.ArrayList;
import java.util.List;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import common.ui.IInitializable;

/**
 *
 * @author Chongmyung Park <chongmyung.park@gmail.com>
 */
public class OperatingConditionPanel extends javax.swing.JPanel implements IInitializable {

    private List<Integer> initializedTabs = new ArrayList<Integer>();

    /**
     * Creates new form NCRTMain
     */
    public OperatingConditionPanel() {
        initComponents();
    }

    @Override
    public void init() {
        tabWZ.init();
        ChangeListener changeListener = new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent changeEvent) {
                Integer idx = tabOperationConditionData.getSelectedIndex();
                IInitializable tab = (IInitializable) tabOperationConditionData.getSelectedComponent();

                if (initializedTabs.contains(idx)) {
                    tab.refresh();
                    return;
                }
                initializedTabs.add(idx);
                tab.init();
            }
        };
        tabOperationConditionData.addChangeListener(changeListener);
    }

    @Override
    public void refresh() {
        Integer idx = tabOperationConditionData.getSelectedIndex();
        IInitializable tab = (IInitializable) tabOperationConditionData.getSelectedComponent();
        tab.refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        tabOperationConditionData = new javax.swing.JTabbedPane();
        tabWZ = new admin.wz.WZPanel();
        tabSpecialEvent = new admin.specialevent.SpecialEventPanel();
        snowMgmtListPanel1 = new admin.snowmgmt.SnowMgmtPanel();

        tabOperationConditionData.addTab("Work Zone", tabWZ);
        tabOperationConditionData.addTab("Special Events", tabSpecialEvent);
        tabOperationConditionData.addTab("Road Condition during Snow Event", snowMgmtListPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabOperationConditionData, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabOperationConditionData, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );
    }// Variables declaration - do not modify
    private admin.snowmgmt.SnowMgmtPanel snowMgmtListPanel1;
    private javax.swing.JTabbedPane tabOperationConditionData;
    private admin.specialevent.SpecialEventPanel tabSpecialEvent;
    private admin.wz.WZPanel tabWZ;
    // End of variables declaration

}
